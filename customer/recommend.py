from openai import OpenAI

def call_llm_service(user_id, query):
    client = OpenAI(api_key="sk-b12b3827e59444848b717d5b870e9413", base_url="https://api.deepseek.com")

    prefix = '你是一个校园食堂的智能推荐系统，请根据学生的历史行为数据和当前用餐时段，推荐5个最合适的餐品ID。'

#     question = '''
#     **用户历史数据**：
# -最近3天浏览记录餐品ID：［101，205，308，412］
# -最近7天点餐记录餐品ID：［205，308，519］
# - 用户常去档口：轻食沙拉档、亚洲风味档
# **候选餐品库**（格式：ID-名称-档口-价格-标签-出餐速度）：
# 101-番茄牛肉面-中式面档-12元-饱腹，热销-8分钟
# 205-鲜虾沙拉-轻食沙拉档-15元-低卡，高蛋白-5分钟
# 207-鸡胸肉杂粮饭-轻食沙拉档-13元-低卡，健身-6分钟
# 308-照烧鸡排饭-亚洲风味档-14元-热销，高蛋白-7分钟
# 309-酸辣土豆丝-中式快餐档-6元-素食，下饭-3分钟
# 412-韩式泡菜炒饭-亚洲风味档-11元-辣，快消-5分钟
# 415-咖喱鱼丸乌冬-亚洲风味档-16元-日式，暖食-10分钟
# 519-三文鱼寿司卷-日料档-18元-冷食，高价-8分钟
# 521-麻辣香锅-川味档-按重量计费-重口味，多人餐-12分钟
# 605-豆浆+茶叶蛋套餐-早餐档-5元-早餐，特惠-2分钟
# **推荐规则**：
# 1. **优先推荐**：用户常去档口的未点过餐品（如轻食沙拉档/亚洲风味档）
# 2. **时段适配**：当前为午餐时段（11:30-13:00），排除早餐类餐品
# 3. **价格策略**：以10-16元区间为主，避免高于历史单次最高消费（18元）
# 4.**出餐速度**：优先选择出餐≤8分钟的餐品（学生午休时间紧张）
# 5. **标签匹配**：结合用户偏好（高蛋白、低卡、亚洲风味）
# 6. **直接返回**餐品ID列表，用逗号分隔，无需解释
# '''
    question = '''
    **用户历史数据**：
    {}
**推荐规则**：
1. **优先推荐**：用户常去档口的未点过餐品（如轻食沙拉档/亚洲风味档）
2. **时段适配**：当前为午餐时段（11:30-13:00），排除早餐类餐品
3. **价格策略**：以10-16元区间为主，避免高于历史单次最高消费（18元）
4.**出餐速度**：优先选择出餐≤8分钟的餐品（学生午休时间紧张）
5. **标签匹配**：结合用户偏好（高蛋白、低卡、亚洲风味）
6. **直接返回**餐品ID列表，用逗号分隔，无需解释
'''.format(query)
    # Convert history to the required message format
    messages = [
        {"role": "system", "content": prefix},
        {"role": "user", "content": question}
    ]
    
    response = client.chat.completions.create(
        model="deepseek-chat",
        messages=messages,
        stream=False
    )
    
    return response.choices[0].message.content